from app.pages.receive_page import ReceiveScreen, Locators
from app.config.config import TestData
import pytest

@pytest.mark.usefixtures('init_driver')
class TestReceive:
    '''Проверить элементы раздела'''
    def test_receive_screen(self):
        receive_screen = ReceiveScreen(self.driver)
        receive_screen.login_without_onboard()
        receive_screen.tap(Locators.BTN_RECEIVE)

        assert receive_screen.is_visible(Locators.TEXT_SCAN_QR)
        assert receive_screen.is_visible(Locators.QR_IMAGE)
        assert receive_screen.is_visible(Locators.RECIPIENT_NAME)
        assert receive_screen.is_enable_to_tap(Locators.BTN_SEND_IN_CHAT)
        assert receive_screen.is_enable_to_tap(Locators.BTN_SHARE)
        assert receive_screen.is_enable_to_tap(Locators.BTN_SETTINGS_RECEIVE)

    '''Проверить элементы настроек пополнения'''
    def test_receive_screen_settings(self):
        receive_screen = ReceiveScreen(self.driver)
        receive_screen.login_without_onboard()
        receive_screen.tap(Locators.BTN_RECEIVE)
        receive_screen.tap(Locators.BTN_SETTINGS_RECEIVE)

        assert receive_screen.is_visible(Locators.TEXT_DEPOSIT_TOKEN)
        assert receive_screen.is_visible(Locators. RECEIVE_TOKEN)
        assert receive_screen.is_visible(Locators.FIELD_AMOUNT_RECEIVE)
        assert receive_screen.is_visible(Locators.FIELD_MEMO_RECEIVE)
        assert receive_screen.is_visible(Locators.BTN_SAVE_RECEIVE)
        assert receive_screen.is_disable_to_tap(Locators.BTN_SAVE_RECEIVE)

    '''Ввести корректные данные в настойки получения'''
    def test_receive_settings(self):
        receive_screen = ReceiveScreen(self.driver)
        receive_screen.login_without_onboard()
        receive_screen.tap(Locators.BTN_RECEIVE)
        receive_screen.tap(Locators.BTN_SETTINGS_RECEIVE)
        receive_screen.tap(Locators.RECEIVE_TOKEN)
        receive_screen.tap(Locators.BTN_TOKEN_RUBCASH)
        receive_screen.tap(Locators.FIELD_AMOUNT_RECEIVE)
        receive_screen.send_keys(Locators.FIELD_AMOUNT_RECEIVE, TestData.SUM_RECEIVE)
        receive_screen.tap(Locators.FIELD_MEMO_RECEIVE)
        receive_screen.send_keys(Locators.FIELD_MEMO_RECEIVE, TestData.MEMO)
        sum = receive_screen.conver_in_num(TestData.SUM_RECEIVE)
        memo = TestData.MEMO
        receive_screen.tap(Locators.TEXT_DEPOSIT_TOKEN)
        receive_screen.tap(Locators.BTN_SAVE_RECEIVE)
        
        assert receive_screen.is_visible(Locators.TEXT_SCAN_QR)
        assert receive_screen.is_visible(Locators.QR_IMAGE)
        assert receive_screen.is_visible(Locators.RECIPIENT_NAME)
        assert receive_screen.is_visible(Locators.REVEIVE_AMOUNT)
        assert receive_screen.is_visible(Locators.REVEIVE_MEMO)
        assert receive_screen.is_enable_to_tap(Locators.BTN_REMOVE_SUM)
        assert receive_screen.is_enable_to_tap(Locators.BTN_SEND_IN_CHAT)
        assert receive_screen.is_enable_to_tap(Locators.BTN_SHARE)
        assert receive_screen.is_enable_to_tap(Locators.BTN_SETTINGS_RECEIVE)
        assert sum == receive_screen.conver_in_num(Locators.REVEIVE_AMOUNT)
        assert memo == receive_screen.get_text2(Locators.REVEIVE_MEMO)

    '''Удалить сумму в разделе'''
    def test_receive_del_sum(self):
        receive_screen = ReceiveScreen(self.driver)
        receive_screen.login_without_onboard()
        receive_screen.tap(Locators.BTN_RECEIVE)
        receive_screen.tap(Locators.BTN_SETTINGS_RECEIVE)
        receive_screen.tap(Locators.RECEIVE_TOKEN)
        receive_screen.tap(Locators.BTN_TOKEN_RUBCASH)
        receive_screen.tap(Locators.FIELD_AMOUNT_RECEIVE)
        receive_screen.send_keys(Locators.FIELD_AMOUNT_RECEIVE, TestData.SUM_RECEIVE)
        receive_screen.tap(Locators.FIELD_MEMO_RECEIVE)
        receive_screen.send_keys(Locators.FIELD_MEMO_RECEIVE, TestData.MEMO)
        receive_screen.tap(Locators.TEXT_DEPOSIT_TOKEN)
        receive_screen.tap(Locators.BTN_SAVE_RECEIVE)
        receive_screen.tap(Locators.BTN_REMOVE_SUM)

        assert receive_screen.is_visible(Locators.TEXT_SCAN_QR)
        assert receive_screen.is_visible(Locators.QR_IMAGE)
        assert receive_screen.is_visible(Locators.RECIPIENT_NAME)
        assert receive_screen.is_invisible(Locators.REVEIVE_AMOUNT)
        assert receive_screen.is_invisible(Locators.REVEIVE_MEMO)
        assert receive_screen.is_invisible(Locators.BTN_REMOVE_SUM)
        assert receive_screen.is_enable_to_tap(Locators.BTN_SEND_IN_CHAT)
        assert receive_screen.is_enable_to_tap(Locators.BTN_SHARE)
        assert receive_screen.is_enable_to_tap(Locators.BTN_SETTINGS_RECEIVE)

    '''Ввести сумму без мемо, сохранить данные'''
    def test_receive_without_memo(self):
        receive_screen = ReceiveScreen(self.driver)
        receive_screen.login_without_onboard()
        receive_screen.tap(Locators.BTN_RECEIVE)
        receive_screen.tap(Locators.BTN_SETTINGS_RECEIVE)
        receive_screen.tap(Locators.RECEIVE_TOKEN)
        receive_screen.tap(Locators.BTN_TOKEN_RUBCASH)
        receive_screen.tap(Locators.FIELD_AMOUNT_RECEIVE)
        receive_screen.send_keys(Locators.FIELD_AMOUNT_RECEIVE, TestData.SUM_RECEIVE)
        sum = receive_screen.conver_in_num(TestData.SUM_RECEIVE)
        receive_screen.tap(Locators.TEXT_DEPOSIT_TOKEN)
        receive_screen.tap(Locators.BTN_SAVE_RECEIVE)

        assert sum == receive_screen.conver_in_num(Locators.REVEIVE_AMOUNT)
        assert receive_screen.is_visible(Locators.TEXT_SCAN_QR)
        assert receive_screen.is_visible(Locators.QR_IMAGE)
        assert receive_screen.is_visible(Locators.RECIPIENT_NAME)
        assert receive_screen.is_visible(Locators.REVEIVE_AMOUNT)
        assert receive_screen.is_enable_to_tap(Locators.BTN_REMOVE_SUM)
        assert receive_screen.is_enable_to_tap(Locators.BTN_SEND_IN_CHAT)
        assert receive_screen.is_enable_to_tap(Locators.BTN_SHARE)
        assert receive_screen.is_enable_to_tap(Locators.BTN_SETTINGS_RECEIVE)

    '''Сохранить корректные данные, вернутся в настройки, удалить данные'''
    def test_receive_del_data(self):
        receive_screen = ReceiveScreen(self.driver)
        receive_screen.login_without_onboard()
        receive_screen.tap(Locators.BTN_RECEIVE)
        receive_screen.tap(Locators.BTN_SETTINGS_RECEIVE)
        receive_screen.tap(Locators.RECEIVE_TOKEN)
        receive_screen.tap(Locators.BTN_TOKEN_RUBCASH)
        receive_screen.tap(Locators.FIELD_AMOUNT_RECEIVE)
        receive_screen.send_keys(Locators.FIELD_AMOUNT_RECEIVE, TestData.SUM_RECEIVE)
        receive_screen.tap(Locators.FIELD_MEMO_RECEIVE)
        receive_screen.send_keys(Locators.FIELD_MEMO_RECEIVE, TestData.MEMO)
        receive_screen.tap(Locators.TEXT_DEPOSIT_TOKEN)
        receive_screen.tap(Locators.BTN_SAVE_RECEIVE)
        receive_screen.tap(Locators.BTN_SETTINGS_RECEIVE)
        receive_screen.tap(Locators.BTN_REMOVE_DATA)

        assert receive_screen.is_visible(Locators.TEXT_SCAN_QR)
        assert receive_screen.is_visible(Locators.QR_IMAGE)
        assert receive_screen.is_visible(Locators.RECIPIENT_NAME)
        assert receive_screen.is_enable_to_tap(Locators.BTN_SEND_IN_CHAT)
        assert receive_screen.is_enable_to_tap(Locators.BTN_SHARE)
        assert receive_screen.is_enable_to_tap(Locators.BTN_SETTINGS_RECEIVE)

    '''Не выбрать токен в настройках, ввести сумму и мемо, попробовать сохранить'''
    def test_receive_without_token(self):
        receive_screen = ReceiveScreen(self.driver)
        receive_screen.login_without_onboard()
        receive_screen.tap(Locators.BTN_RECEIVE)
        receive_screen.tap(Locators.BTN_SETTINGS_RECEIVE)
        receive_screen.tap(Locators.FIELD_AMOUNT_RECEIVE)
        receive_screen.send_keys(Locators.FIELD_AMOUNT_RECEIVE, TestData.SUM_RECEIVE)
        receive_screen.tap(Locators.FIELD_MEMO_RECEIVE)
        receive_screen.send_keys(Locators.FIELD_MEMO_RECEIVE, TestData.MEMO)
        receive_screen.tap(Locators.TEXT_DEPOSIT_TOKEN)
        receive_screen.tap(Locators.BTN_SAVE_RECEIVE)

        assert receive_screen.is_enable_to_tap(Locators.BTN_SAVE_RECEIVE)

    '''Сохранить корректные данные, вернутся в настройки, удалить только сумму'''
    def test_receive_del_sum_settings(self):
        receive_screen = ReceiveScreen(self.driver)
        receive_screen.login_without_onboard()
        receive_screen.tap(Locators.BTN_RECEIVE)
        receive_screen.tap(Locators.BTN_SETTINGS_RECEIVE)
        receive_screen.tap(Locators.RECEIVE_TOKEN)
        receive_screen.tap(Locators.BTN_TOKEN_RUBCASH)
        receive_screen.tap(Locators.FIELD_AMOUNT_RECEIVE)
        receive_screen.send_keys(Locators.FIELD_AMOUNT_RECEIVE, TestData.SUM_RECEIVE)
        receive_screen.tap(Locators.FIELD_MEMO_RECEIVE)
        receive_screen.send_keys(Locators.FIELD_MEMO_RECEIVE, TestData.MEMO)
        receive_screen.tap(Locators.TEXT_DEPOSIT_TOKEN)
        receive_screen.tap(Locators.BTN_SAVE_RECEIVE)
        receive_screen.tap(Locators.BTN_SETTINGS_RECEIVE)
        receive_screen.tap(Locators.FIELD_AMOUNT_RECEIVE)
        receive_screen.tap(Locators.BTN_REMOVE_SETTINGS)
        receive_screen.tap(Locators.TEXT_DEPOSIT_TOKEN)
        receive_screen.tap(Locators.BTN_SAVE_RECEIVE)

        assert receive_screen.is_enable_to_tap(Locators.BTN_SAVE_RECEIVE)
        assert receive_screen.is_visible(Locators.BTN_REMOVE_DATA)

    '''Сохранить корректные данные, вернутся в настройки, удалить только memo'''
    def test_receive_del_memo_settings(self):
        receive_screen = ReceiveScreen(self.driver)
        receive_screen.login_without_onboard()
        receive_screen.tap(Locators.BTN_RECEIVE)
        receive_screen.tap(Locators.BTN_SETTINGS_RECEIVE)
        receive_screen.tap(Locators.RECEIVE_TOKEN)
        receive_screen.tap(Locators.BTN_TOKEN_RUBCASH)
        receive_screen.tap(Locators.FIELD_AMOUNT_RECEIVE)
        receive_screen.send_keys(Locators.FIELD_AMOUNT_RECEIVE, TestData.SUM_RECEIVE)
        receive_screen.tap(Locators.FIELD_MEMO_RECEIVE)
        receive_screen.send_keys(Locators.FIELD_MEMO_RECEIVE, TestData.MEMO)
        receive_screen.tap(Locators.TEXT_DEPOSIT_TOKEN)
        receive_screen.tap(Locators.BTN_SAVE_RECEIVE)
        receive_screen.tap(Locators.BTN_SETTINGS_RECEIVE)
        sum = receive_screen.conver_in_num(TestData.SUM_RECEIVE)
        receive_screen.tap(Locators.FIELD_MEMO_RECEIVE)
        receive_screen.tap(Locators.BTN_REMOVE_SETTINGS)
        receive_screen.tap(Locators.TEXT_DEPOSIT_TOKEN)
        receive_screen.tap(Locators.BTN_SAVE_RECEIVE)

        assert sum == receive_screen.conver_in_num(Locators.REVEIVE_AMOUNT)
        assert receive_screen.is_visible(Locators.TEXT_SCAN_QR)
        assert receive_screen.is_visible(Locators.QR_IMAGE)
        assert receive_screen.is_visible(Locators.RECIPIENT_NAME)
        assert receive_screen.is_visible(Locators.REVEIVE_AMOUNT)
        assert receive_screen.is_enable_to_tap(Locators.BTN_REMOVE_SUM)
        assert receive_screen.is_enable_to_tap(Locators.BTN_SEND_IN_CHAT)
        assert receive_screen.is_enable_to_tap(Locators.BTN_SHARE)
        assert receive_screen.is_enable_to_tap(Locators.BTN_SETTINGS_RECEIVE)

    '''Выбрать токен, ввести данные, изменить токен, сохранить данные'''
    def test_receive_change_token(self):
        receive_screen = ReceiveScreen(self.driver)
        receive_screen.login_without_onboard()
        receive_screen.tap(Locators.BTN_RECEIVE)
        receive_screen.tap(Locators.BTN_SETTINGS_RECEIVE)
        receive_screen.tap(Locators.RECEIVE_TOKEN)
        receive_screen.tap(Locators.BTN_TOKEN_RUBCASH)
        receive_screen.tap(Locators.FIELD_AMOUNT_RECEIVE)
        receive_screen.send_keys(Locators.FIELD_AMOUNT_RECEIVE, TestData.SUM_RECEIVE)
        receive_screen.tap(Locators.FIELD_MEMO_RECEIVE)
        receive_screen.send_keys(Locators.FIELD_MEMO_RECEIVE, TestData.MEMO)
        receive_screen.tap(Locators.TEXT_DEPOSIT_TOKEN)
        receive_screen.tap(Locators.RECEIVE_TOKEN)
        receive_screen.tap(Locators.BTN_TOKEN_UAHCASH)
        sum = receive_screen.conver_in_num(TestData.SUM_RECEIVE)
        receive_screen.tap(Locators.BTN_SAVE_RECEIVE)

        assert sum == receive_screen.conver_in_num(Locators.REVEIVE_AMOUNT)
        assert receive_screen.is_visible(Locators.TEXT_SCAN_QR)
        assert receive_screen.is_visible(Locators.QR_IMAGE)
        assert receive_screen.is_visible(Locators.RECIPIENT_NAME)
        assert receive_screen.is_visible(Locators.REVEIVE_AMOUNT)
        assert receive_screen.is_visible(Locators.REVEIVE_MEMO)
        assert receive_screen.is_enable_to_tap(Locators.BTN_REMOVE_SUM)
        assert receive_screen.is_enable_to_tap(Locators.BTN_SEND_IN_CHAT)
        assert receive_screen.is_enable_to_tap(Locators.BTN_SHARE)
        assert receive_screen.is_enable_to_tap(Locators.BTN_SETTINGS_RECEIVE)

    '''Выбрать токен, ввести данные, изменить сумму, сохранить данные'''
    def test_receive_change_sum(self):
        receive_screen = ReceiveScreen(self.driver)
        receive_screen.login_without_onboard()
        receive_screen.tap(Locators.BTN_RECEIVE)
        receive_screen.tap(Locators.BTN_SETTINGS_RECEIVE)
        receive_screen.tap(Locators.RECEIVE_TOKEN)
        receive_screen.tap(Locators.BTN_TOKEN_RUBCASH)
        receive_screen.tap(Locators.FIELD_AMOUNT_RECEIVE)
        receive_screen.send_keys(Locators.FIELD_AMOUNT_RECEIVE, TestData.SUM_RECEIVE)
        receive_screen.tap(Locators.FIELD_MEMO_RECEIVE)
        receive_screen.send_keys(Locators.FIELD_MEMO_RECEIVE, TestData.MEMO)
        receive_screen.tap(Locators.TEXT_DEPOSIT_TOKEN)
        receive_screen.tap(Locators.FIELD_AMOUNT_RECEIVE)
        receive_screen.tap(Locators.BTN_REMOVE_SETTINGS)
        receive_screen.send_keys(Locators.FIELD_AMOUNT_RECEIVE, TestData.SUM_RECEIVE2)
        sum = receive_screen.conver_in_num(TestData.SUM_RECEIVE2)
        receive_screen.tap(Locators.TEXT_DEPOSIT_TOKEN)
        receive_screen.tap(Locators.BTN_SAVE_RECEIVE)

        assert sum == receive_screen.conver_in_num(Locators.REVEIVE_AMOUNT)
        assert receive_screen.is_visible(Locators.TEXT_SCAN_QR)
        assert receive_screen.is_visible(Locators.QR_IMAGE)
        assert receive_screen.is_visible(Locators.RECIPIENT_NAME)
        assert receive_screen.is_visible(Locators.REVEIVE_AMOUNT)
        assert receive_screen.is_enable_to_tap(Locators.BTN_REMOVE_SUM)
        assert receive_screen.is_enable_to_tap(Locators.BTN_SEND_IN_CHAT)
        assert receive_screen.is_enable_to_tap(Locators.BTN_SHARE)
        assert receive_screen.is_enable_to_tap(Locators.BTN_SETTINGS_RECEIVE)

    '''Выбрать токен, ввести данные, изменить мемо, сохранить данные'''
    def test_receive_change_memo(self):
        receive_screen = ReceiveScreen(self.driver)
        receive_screen.login_without_onboard()
        receive_screen.tap(Locators.BTN_RECEIVE)
        receive_screen.tap(Locators.BTN_SETTINGS_RECEIVE)
        receive_screen.tap(Locators.RECEIVE_TOKEN)
        receive_screen.tap(Locators.BTN_TOKEN_RUBCASH)
        receive_screen.tap(Locators.FIELD_AMOUNT_RECEIVE)
        receive_screen.send_keys(Locators.FIELD_AMOUNT_RECEIVE, TestData.SUM_RECEIVE)
        receive_screen.tap(Locators.FIELD_MEMO_RECEIVE)
        receive_screen.send_keys(Locators.FIELD_MEMO_RECEIVE, TestData.MEMO)
        receive_screen.tap(Locators.TEXT_DEPOSIT_TOKEN)
        receive_screen.tap(Locators.FIELD_MEMO_RECEIVE)
        receive_screen.tap(Locators.BTN_REMOVE_SETTINGS)
        receive_screen.send_keys(Locators.FIELD_MEMO_RECEIVE, TestData.NAME_INCORRECT)
        receive_screen.tap(Locators.TEXT_DEPOSIT_TOKEN)
        memo_new = TestData.NAME_INCORRECT
        receive_screen.tap(Locators.BTN_SAVE_RECEIVE)

        assert receive_screen.is_visible(Locators.TEXT_SCAN_QR)
        assert receive_screen.is_visible(Locators.QR_IMAGE)
        assert receive_screen.is_visible(Locators.RECIPIENT_NAME)
        assert receive_screen.is_visible(Locators.REVEIVE_AMOUNT)
        assert receive_screen.is_enable_to_tap(Locators.BTN_REMOVE_SUM)
        assert receive_screen.is_enable_to_tap(Locators.BTN_SEND_IN_CHAT)
        assert receive_screen.is_enable_to_tap(Locators.BTN_SHARE)
        assert receive_screen.is_enable_to_tap(Locators.BTN_SETTINGS_RECEIVE)
        assert memo_new == receive_screen.get_text2(Locators.REVEIVE_MEMO2)

    '''Изменить аккаунт из раздела'''
    def test_change_account(self):
        receive_screen = ReceiveScreen(self.driver)
        receive_screen.login_without_onboard()
        receive_screen.tap(Locators.BTN_RECEIVE)
        receive_screen.tap(Locators.TEXT_AKK_NAME)
        receive_screen.tap(Locators.BTN_ADD_MORE_ACC)
        receive_screen.tap(Locators.BTN_ENTER_PK_POPUP)
        receive_screen.send_keys(Locators.FIELD_PRIVAT_KEY, TestData.PRIVAT_KEY)
        receive_screen.tap(Locators.TEXT_WARNING)
        receive_screen.tap(Locators.BTN_ADD_ACC)

        assert receive_screen.get_text2(Locators.TEXT_AKK_NAME) ==receive_screen.get_text2(Locators.RECIPIENT_NAME)
        assert receive_screen.is_visible(Locators.TEXT_SCAN_QR)
        assert receive_screen.is_visible(Locators.QR_IMAGE)
        assert receive_screen.is_visible(Locators.RECIPIENT_NAME)
        assert receive_screen.is_enable_to_tap(Locators.BTN_SEND_IN_CHAT)
        assert receive_screen.is_enable_to_tap(Locators.BTN_SHARE)
        assert receive_screen.is_enable_to_tap(Locators.BTN_SETTINGS_RECEIVE)

    '''Изменить аккаунт из настроек раздела'''
    def test_change_account_settings(self):
        receive_screen = ReceiveScreen(self.driver)
        receive_screen.login_without_onboard()
        receive_screen.tap(Locators.BTN_RECEIVE)
        receive_screen.tap(Locators.BTN_SETTINGS_RECEIVE)
        receive_screen.tap(Locators.TEXT_AKK_NAME)
        receive_screen.tap(Locators.BTN_ADD_MORE_ACC)
        receive_screen.tap(Locators.BTN_ENTER_PK_POPUP)
        receive_screen.send_keys(Locators.FIELD_PRIVAT_KEY, TestData.PRIVAT_KEY)
        receive_screen.tap(Locators.TEXT_WARNING)
        receive_screen.tap(Locators.BTN_ADD_ACC)

        assert receive_screen.get_text2(Locators.TEXT_AKK_NAME) == 'fletchercat1'
        assert receive_screen.is_visible(Locators.TEXT_DEPOSIT_TOKEN)
        assert receive_screen.is_visible(Locators.RECEIVE_TOKEN)
        assert receive_screen.is_visible(Locators.FIELD_AMOUNT_RECEIVE)
        assert receive_screen.is_visible(Locators.FIELD_MEMO_RECEIVE)
        assert receive_screen.is_visible(Locators.BTN_SAVE_RECEIVE)
        assert receive_screen.is_disable_to_tap(Locators.BTN_SAVE_RECEIVE)

    '''Отправить в чат заполненный код'''
    def test_receive_settings_chat(self):
        receive_screen = ReceiveScreen(self.driver)
        receive_screen.login_without_onboard()
        receive_screen.tap(Locators.BTN_RECEIVE)
        receive_screen.tap(Locators.BTN_SETTINGS_RECEIVE)
        receive_screen.tap(Locators.RECEIVE_TOKEN)
        receive_screen.tap(Locators.BTN_TOKEN_RUBCASH)
        receive_screen.tap(Locators.FIELD_AMOUNT_RECEIVE)
        receive_screen.send_keys(Locators.FIELD_AMOUNT_RECEIVE, TestData.SUM_RECEIVE)
        receive_screen.tap(Locators.FIELD_MEMO_RECEIVE)
        receive_screen.send_keys(Locators.FIELD_MEMO_RECEIVE, TestData.MEMO)
        receive_screen.tap(Locators.TEXT_DEPOSIT_TOKEN)
        receive_screen.tap(Locators.BTN_SAVE_RECEIVE)
        receive_screen.tap(Locators.BTN_SEND_IN_CHAT)
        receive_screen.tap(Locators.RECIPIENT_NAME_FLETCERCAT1)
        receive_screen.tap(Locators.BTN_SEND)

        assert receive_screen.is_enable_to_tap(Locators.BTN_QR_CHAT)
        assert receive_screen.is_enable_to_tap(Locators.BTN_TRANSFER_CHAT)
        assert receive_screen.is_visible(Locators.BTN_QR_IMAGE)
        assert receive_screen.is_visible(Locators.FIELD_MESSAGE)
        assert receive_screen.is_enable_to_tap(Locators.BTN_MESSAGE_SEND)
        assert receive_screen.is_enable_to_tap(Locators.BTN_QR_IMAGE_SAVE)
        assert receive_screen.is_visible(Locators.RECIPIENT_NAME_FLETCERCAT1)
        assert receive_screen.is_visible(Locators.BTN_RES_AND_TRANS)

    '''отправить в чат пустой код'''
    def test_receive_chat(self):
        receive_screen = ReceiveScreen(self.driver)
        receive_screen.login_without_onboard()
        receive_screen.tap(Locators.BTN_RECEIVE)
        receive_screen.tap(Locators.BTN_SEND_IN_CHAT)
        receive_screen.tap(Locators.RECIPIENT_NAME_FLETCERCAT1)
        receive_screen.tap(Locators.BTN_SEND)

        assert receive_screen.is_enable_to_tap(Locators.BTN_QR_CHAT)
        assert receive_screen.is_enable_to_tap(Locators.BTN_TRANSFER_CHAT)
        assert receive_screen.is_visible(Locators.BTN_QR_IMAGE)
        assert receive_screen.is_visible(Locators.FIELD_MESSAGE)
        assert receive_screen.is_enable_to_tap(Locators.BTN_MESSAGE_SEND)
        assert receive_screen.is_enable_to_tap(Locators.BTN_QR_IMAGE_SAVE)
        assert receive_screen.is_visible(Locators.RECIPIENT_NAME_FLETCERCAT1)
        assert receive_screen.is_visible(Locators.BTN_RES_AND_TRANS)

    '''отправить в чат заполненный код и сохранить его'''
    def test_receive_settings_chat_save_qr(self):
        receive_screen = ReceiveScreen(self.driver)
        receive_screen.login_without_onboard()
        receive_screen.tap(Locators.BTN_RECEIVE)
        receive_screen.tap(Locators.BTN_SETTINGS_RECEIVE)
        receive_screen.tap(Locators.RECEIVE_TOKEN)
        receive_screen.tap(Locators.BTN_TOKEN_RUBCASH)
        receive_screen.tap(Locators.FIELD_AMOUNT_RECEIVE)
        receive_screen.send_keys(Locators.FIELD_AMOUNT_RECEIVE, TestData.SUM_RECEIVE)
        receive_screen.tap(Locators.FIELD_MEMO_RECEIVE)
        receive_screen.send_keys(Locators.FIELD_MEMO_RECEIVE, TestData.MEMO)
        receive_screen.tap(Locators.TEXT_DEPOSIT_TOKEN)
        receive_screen.tap(Locators.BTN_SAVE_RECEIVE)
        receive_screen.tap(Locators.BTN_SEND_IN_CHAT)
        receive_screen.tap(Locators.RECIPIENT_NAME_FLETCERCAT1)
        receive_screen.tap(Locators.BTN_SEND)
        receive_screen.tap(Locators.BTN_QR_IMAGE_SAVE)

    '''ПОЛУЧИТЬ В ИСТОРИИ ПО ТОКЕНУ'''
    '''Проверить элементы раздела'''
    def test_receive_screen_history(self):
        receive_screen = ReceiveScreen(self.driver)
        receive_screen.login_without_onboard()
        receive_screen.tap(Locators.BTN_TOKEN_RUBCASH)
        receive_screen.tap(Locators.DETAIL_TOKEN_RECEIVE)

        assert receive_screen.is_visible(Locators.TEXT_SCAN_QR)
        assert receive_screen.is_visible(Locators.QR_IMAGE)
        assert receive_screen.is_visible(Locators.RECIPIENT_NAME)
        assert receive_screen.is_enable_to_tap(Locators.BTN_SEND_IN_CHAT)
        assert receive_screen.is_enable_to_tap(Locators.BTN_SHARE)
        assert receive_screen.is_enable_to_tap(Locators.BTN_SETTINGS_RECEIVE)

    '''Проверить элементы настроек пополнения'''
    def test_receive_screen_settings_history(self):
        receive_screen = ReceiveScreen(self.driver)
        receive_screen.login_without_onboard()
        receive_screen.tap(Locators.BTN_TOKEN_RUBCASH)
        receive_screen.tap(Locators.DETAIL_TOKEN_RECEIVE)
        receive_screen.tap(Locators.BTN_SETTINGS_RECEIVE)

        assert receive_screen.is_visible(Locators.TOKEN_RECEIVE_RUBCASH)
        assert receive_screen.is_visible(Locators.RECEIVE_TOKEN)
        assert receive_screen.is_visible(Locators.FIELD_AMOUNT_RECEIVE)
        assert receive_screen.is_visible(Locators.FIELD_MEMO_RECEIVE)
        assert receive_screen.is_visible(Locators.BTN_SAVE_RECEIVE)
        assert receive_screen.is_disable_to_tap(Locators.BTN_SAVE_RECEIVE)

    '''Ввести корректные данные в настойки получения'''
    def test_receive_settings_history(self):
        receive_screen = ReceiveScreen(self.driver)
        receive_screen.login_without_onboard()
        receive_screen.tap(Locators.BTN_TOKEN_RUBCASH)
        receive_screen.tap(Locators.DETAIL_TOKEN_RECEIVE)
        receive_screen.tap(Locators.BTN_SETTINGS_RECEIVE)
        receive_screen.tap(Locators.FIELD_AMOUNT_RECEIVE)
        receive_screen.send_keys(Locators.FIELD_AMOUNT_RECEIVE, TestData.SUM_RECEIVE)
        receive_screen.tap(Locators.FIELD_MEMO_RECEIVE)
        receive_screen.send_keys(Locators.FIELD_MEMO_RECEIVE, TestData.MEMO)
        sum = receive_screen.conver_in_num(TestData.SUM_RECEIVE)
        memo = TestData.MEMO
        receive_screen.tap(Locators.TEXT_DEPOSIT_TOKEN)
        receive_screen.tap(Locators.BTN_SAVE_RECEIVE)

        assert receive_screen.is_visible(Locators.TEXT_SCAN_QR)
        assert receive_screen.is_visible(Locators.QR_IMAGE)
        assert receive_screen.is_visible(Locators.RECIPIENT_NAME)
        assert receive_screen.is_visible(Locators.REVEIVE_AMOUNT)
        assert receive_screen.is_visible(Locators.REVEIVE_MEMO)
        assert receive_screen.is_enable_to_tap(Locators.BTN_REMOVE_SUM)
        assert receive_screen.is_enable_to_tap(Locators.BTN_SEND_IN_CHAT)
        assert receive_screen.is_enable_to_tap(Locators.BTN_SHARE)
        assert receive_screen.is_enable_to_tap(Locators.BTN_SETTINGS_RECEIVE)
        assert sum == receive_screen.conver_in_num(Locators.REVEIVE_AMOUNT)
        assert memo == receive_screen.get_text2(Locators.REVEIVE_MEMO)

    '''Удалить сумму в разделе'''
    def test_receive_del_sum_history(self):
        receive_screen = ReceiveScreen(self.driver)
        receive_screen.login_without_onboard()
        receive_screen.tap(Locators.BTN_TOKEN_RUBCASH)
        receive_screen.tap(Locators.DETAIL_TOKEN_RECEIVE)
        receive_screen.tap(Locators.BTN_SETTINGS_RECEIVE)
        receive_screen.tap(Locators.FIELD_AMOUNT_RECEIVE)
        receive_screen.send_keys(Locators.FIELD_AMOUNT_RECEIVE, TestData.SUM_RECEIVE)
        receive_screen.tap(Locators.FIELD_MEMO_RECEIVE)
        receive_screen.send_keys(Locators.FIELD_MEMO_RECEIVE, TestData.MEMO)
        receive_screen.tap(Locators.TEXT_DEPOSIT_TOKEN)
        receive_screen.tap(Locators.BTN_SAVE_RECEIVE)
        receive_screen.tap(Locators.BTN_REMOVE_SUM)

        assert receive_screen.is_visible(Locators.TEXT_SCAN_QR)
        assert receive_screen.is_visible(Locators.QR_IMAGE)
        assert receive_screen.is_visible(Locators.RECIPIENT_NAME)
        assert receive_screen.is_invisible(Locators.REVEIVE_AMOUNT)
        assert receive_screen.is_invisible(Locators.REVEIVE_MEMO)
        assert receive_screen.is_invisible(Locators.BTN_REMOVE_SUM)
        assert receive_screen.is_enable_to_tap(Locators.BTN_SEND_IN_CHAT)
        assert receive_screen.is_enable_to_tap(Locators.BTN_SHARE)
        assert receive_screen.is_enable_to_tap(Locators.BTN_SETTINGS_RECEIVE)

    '''Ввести сумму без мемо, сохранить данные'''
    def test_receive_without_memo_history(self):
        receive_screen = ReceiveScreen(self.driver)
        receive_screen.login_without_onboard()
        receive_screen.tap(Locators.BTN_TOKEN_RUBCASH)
        receive_screen.tap(Locators.DETAIL_TOKEN_RECEIVE)
        receive_screen.tap(Locators.BTN_SETTINGS_RECEIVE)
        receive_screen.tap(Locators.RECEIVE_TOKEN)
        receive_screen.tap(Locators.BTN_TOKEN_RUBCASH)
        receive_screen.tap(Locators.FIELD_AMOUNT_RECEIVE)
        receive_screen.send_keys(Locators.FIELD_AMOUNT_RECEIVE, TestData.SUM_RECEIVE)
        sum = receive_screen.conver_in_num(TestData.SUM_RECEIVE)
        receive_screen.tap(Locators.TEXT_DEPOSIT_TOKEN)
        receive_screen.tap(Locators.BTN_SAVE_RECEIVE)

        assert sum == receive_screen.conver_in_num(Locators.REVEIVE_AMOUNT)
        assert receive_screen.is_visible(Locators.TEXT_SCAN_QR)
        assert receive_screen.is_visible(Locators.QR_IMAGE)
        assert receive_screen.is_visible(Locators.RECIPIENT_NAME)
        assert receive_screen.is_visible(Locators.REVEIVE_AMOUNT)
        assert receive_screen.is_enable_to_tap(Locators.BTN_REMOVE_SUM)
        assert receive_screen.is_enable_to_tap(Locators.BTN_SEND_IN_CHAT)
        assert receive_screen.is_enable_to_tap(Locators.BTN_SHARE)
        assert receive_screen.is_enable_to_tap(Locators.BTN_SETTINGS_RECEIVE)

    '''Сохранить корректные данные, вернутся в настройки, удалить данные'''
    def test_receive_del_data_history(self):
        receive_screen = ReceiveScreen(self.driver)
        receive_screen.login_without_onboard()
        receive_screen.tap(Locators.BTN_TOKEN_RUBCASH)
        receive_screen.tap(Locators.DETAIL_TOKEN_RECEIVE)
        receive_screen.tap(Locators.BTN_SETTINGS_RECEIVE)
        receive_screen.tap(Locators.FIELD_AMOUNT_RECEIVE)
        receive_screen.send_keys(Locators.FIELD_AMOUNT_RECEIVE, TestData.SUM_RECEIVE)
        receive_screen.tap(Locators.FIELD_MEMO_RECEIVE)
        receive_screen.send_keys(Locators.FIELD_MEMO_RECEIVE, TestData.MEMO)
        receive_screen.tap(Locators.TEXT_DEPOSIT_TOKEN)
        receive_screen.tap(Locators.BTN_SAVE_RECEIVE)
        receive_screen.tap(Locators.BTN_SETTINGS_RECEIVE)
        receive_screen.tap(Locators.BTN_REMOVE_DATA)

        assert receive_screen.is_visible(Locators.TEXT_SCAN_QR)
        assert receive_screen.is_visible(Locators.QR_IMAGE)
        assert receive_screen.is_visible(Locators.RECIPIENT_NAME)
        assert receive_screen.is_enable_to_tap(Locators.BTN_SEND_IN_CHAT)
        assert receive_screen.is_enable_to_tap(Locators.BTN_SHARE)
        assert receive_screen.is_enable_to_tap(Locators.BTN_SETTINGS_RECEIVE)

    '''Сохранить корректные данные, вернутся в настройки, удалить только сумму'''
    def test_receive_del_sum_settings_history(self):
        receive_screen = ReceiveScreen(self.driver)
        receive_screen.login_without_onboard()
        receive_screen.tap(Locators.BTN_TOKEN_RUBCASH)
        receive_screen.tap(Locators.DETAIL_TOKEN_RECEIVE)
        receive_screen.tap(Locators.BTN_SETTINGS_RECEIVE)
        receive_screen.tap(Locators.FIELD_AMOUNT_RECEIVE)
        receive_screen.send_keys(Locators.FIELD_AMOUNT_RECEIVE, TestData.SUM_RECEIVE)
        receive_screen.tap(Locators.FIELD_MEMO_RECEIVE)
        receive_screen.send_keys(Locators.FIELD_MEMO_RECEIVE, TestData.MEMO)
        receive_screen.tap(Locators.TEXT_DEPOSIT_TOKEN)
        receive_screen.tap(Locators.BTN_SAVE_RECEIVE)
        receive_screen.tap(Locators.BTN_SETTINGS_RECEIVE)
        receive_screen.tap(Locators.FIELD_AMOUNT_RECEIVE)
        receive_screen.tap(Locators.BTN_REMOVE_SETTINGS)
        receive_screen.tap(Locators.TEXT_DEPOSIT_TOKEN)
        receive_screen.tap(Locators.BTN_SAVE_RECEIVE)

        assert receive_screen.is_enable_to_tap(Locators.BTN_SAVE_RECEIVE)
        assert receive_screen.is_visible(Locators.BTN_REMOVE_DATA)

    '''Сохранить корректные данные, вернутся в настройки, удалить только memo'''
    def test_receive_del_memo_settings_history(self):
        receive_screen = ReceiveScreen(self.driver)
        receive_screen.login_without_onboard()
        receive_screen.tap(Locators.BTN_TOKEN_RUBCASH)
        receive_screen.tap(Locators.DETAIL_TOKEN_RECEIVE)
        receive_screen.tap(Locators.BTN_SETTINGS_RECEIVE)
        receive_screen.tap(Locators.FIELD_AMOUNT_RECEIVE)
        receive_screen.send_keys(Locators.FIELD_AMOUNT_RECEIVE, TestData.SUM_RECEIVE)
        receive_screen.tap(Locators.FIELD_MEMO_RECEIVE)
        receive_screen.send_keys(Locators.FIELD_MEMO_RECEIVE, TestData.MEMO)
        receive_screen.tap(Locators.TEXT_DEPOSIT_TOKEN)
        receive_screen.tap(Locators.BTN_SAVE_RECEIVE)
        receive_screen.tap(Locators.BTN_SETTINGS_RECEIVE)
        sum = receive_screen.conver_in_num(TestData.SUM_RECEIVE)
        receive_screen.tap(Locators.FIELD_MEMO_RECEIVE)
        receive_screen.tap(Locators.BTN_REMOVE_SETTINGS)
        receive_screen.tap(Locators.TEXT_DEPOSIT_TOKEN)
        receive_screen.tap(Locators.BTN_SAVE_RECEIVE)

        assert sum == receive_screen.conver_in_num(Locators.REVEIVE_AMOUNT)
        assert receive_screen.is_visible(Locators.TEXT_SCAN_QR)
        assert receive_screen.is_visible(Locators.QR_IMAGE)
        assert receive_screen.is_visible(Locators.RECIPIENT_NAME)
        assert receive_screen.is_visible(Locators.REVEIVE_AMOUNT)
        assert receive_screen.is_enable_to_tap(Locators.BTN_REMOVE_SUM)
        assert receive_screen.is_enable_to_tap(Locators.BTN_SEND_IN_CHAT)
        assert receive_screen.is_enable_to_tap(Locators.BTN_SHARE)
        assert receive_screen.is_enable_to_tap(Locators.BTN_SETTINGS_RECEIVE)

    '''Изменить токен, сохранить данные'''
    def test_receive_change_token_history(self):
        receive_screen = ReceiveScreen(self.driver)
        receive_screen.login_without_onboard()
        receive_screen.tap(Locators.BTN_TOKEN_RUBCASH)
        receive_screen.tap(Locators.DETAIL_TOKEN_RECEIVE)
        receive_screen.tap(Locators.BTN_SETTINGS_RECEIVE)
        receive_screen.tap(Locators.FIELD_AMOUNT_RECEIVE)
        receive_screen.send_keys(Locators.FIELD_AMOUNT_RECEIVE, TestData.SUM_RECEIVE)
        receive_screen.tap(Locators.FIELD_MEMO_RECEIVE)
        receive_screen.send_keys(Locators.FIELD_MEMO_RECEIVE, TestData.MEMO)
        receive_screen.tap(Locators.TEXT_DEPOSIT_TOKEN)
        receive_screen.tap(Locators.RECEIVE_TOKEN)
        receive_screen.tap(Locators.BTN_TOKEN_UAHCASH)
        sum = receive_screen.conver_in_num(TestData.SUM_RECEIVE)
        receive_screen.tap(Locators.BTN_SAVE_RECEIVE)

        assert sum == receive_screen.conver_in_num(Locators.REVEIVE_AMOUNT)
        assert receive_screen.is_visible(Locators.TEXT_SCAN_QR)
        assert receive_screen.is_visible(Locators.QR_IMAGE)
        assert receive_screen.is_visible(Locators.RECIPIENT_NAME)
        assert receive_screen.is_visible(Locators.REVEIVE_AMOUNT)
        assert receive_screen.is_visible(Locators.REVEIVE_MEMO)
        assert receive_screen.is_enable_to_tap(Locators.BTN_REMOVE_SUM)
        assert receive_screen.is_enable_to_tap(Locators.BTN_SEND_IN_CHAT)
        assert receive_screen.is_enable_to_tap(Locators.BTN_SHARE)
        assert receive_screen.is_enable_to_tap(Locators.BTN_SETTINGS_RECEIVE)

    '''Ввести данные, изменить сумму, сохранить данные'''
    def test_receive_change_sum_history(self):
        receive_screen = ReceiveScreen(self.driver)
        receive_screen.login_without_onboard()
        receive_screen.tap(Locators.BTN_TOKEN_RUBCASH)
        receive_screen.tap(Locators.DETAIL_TOKEN_RECEIVE)
        receive_screen.tap(Locators.BTN_SETTINGS_RECEIVE)
        receive_screen.tap(Locators.FIELD_AMOUNT_RECEIVE)
        receive_screen.send_keys(Locators.FIELD_AMOUNT_RECEIVE, TestData.SUM_RECEIVE)
        receive_screen.tap(Locators.FIELD_MEMO_RECEIVE)
        receive_screen.send_keys(Locators.FIELD_MEMO_RECEIVE, TestData.MEMO)
        receive_screen.tap(Locators.TEXT_DEPOSIT_TOKEN)
        receive_screen.tap(Locators.FIELD_AMOUNT_RECEIVE)
        receive_screen.tap(Locators.BTN_REMOVE_SETTINGS)
        receive_screen.send_keys(Locators.FIELD_AMOUNT_RECEIVE, TestData.SUM_RECEIVE2)
        sum = receive_screen.conver_in_num(TestData.SUM_RECEIVE2)
        receive_screen.tap(Locators.TEXT_DEPOSIT_TOKEN)
        receive_screen.tap(Locators.BTN_SAVE_RECEIVE)

        assert sum == receive_screen.conver_in_num(Locators.REVEIVE_AMOUNT)
        assert receive_screen.is_visible(Locators.TEXT_SCAN_QR)
        assert receive_screen.is_visible(Locators.QR_IMAGE)
        assert receive_screen.is_visible(Locators.RECIPIENT_NAME)
        assert receive_screen.is_visible(Locators.REVEIVE_AMOUNT)
        assert receive_screen.is_enable_to_tap(Locators.BTN_REMOVE_SUM)
        assert receive_screen.is_enable_to_tap(Locators.BTN_SEND_IN_CHAT)
        assert receive_screen.is_enable_to_tap(Locators.BTN_SHARE)
        assert receive_screen.is_enable_to_tap(Locators.BTN_SETTINGS_RECEIVE)

    '''Ввести данные, изменить мемо, сохранить данные'''
    def test_receive_change_memo_history(self):
        receive_screen = ReceiveScreen(self.driver)
        receive_screen.login_without_onboard()
        receive_screen.tap(Locators.BTN_TOKEN_RUBCASH)
        receive_screen.tap(Locators.DETAIL_TOKEN_RECEIVE)
        receive_screen.tap(Locators.BTN_SETTINGS_RECEIVE)
        receive_screen.tap(Locators.FIELD_AMOUNT_RECEIVE)
        receive_screen.send_keys(Locators.FIELD_AMOUNT_RECEIVE, TestData.SUM_RECEIVE)
        receive_screen.tap(Locators.FIELD_MEMO_RECEIVE)
        receive_screen.send_keys(Locators.FIELD_MEMO_RECEIVE, TestData.MEMO)
        receive_screen.tap(Locators.TEXT_DEPOSIT_TOKEN)
        receive_screen.tap(Locators.FIELD_MEMO_RECEIVE)
        receive_screen.tap(Locators.BTN_REMOVE_SETTINGS)
        receive_screen.send_keys(Locators.FIELD_MEMO_RECEIVE, TestData.NAME_INCORRECT)
        receive_screen.tap(Locators.TEXT_DEPOSIT_TOKEN)
        memo_new = TestData.NAME_INCORRECT
        receive_screen.tap(Locators.BTN_SAVE_RECEIVE)

        assert receive_screen.is_visible(Locators.TEXT_SCAN_QR)
        assert receive_screen.is_visible(Locators.QR_IMAGE)
        assert receive_screen.is_visible(Locators.RECIPIENT_NAME)
        assert receive_screen.is_visible(Locators.REVEIVE_AMOUNT)
        assert receive_screen.is_enable_to_tap(Locators.BTN_REMOVE_SUM)
        assert receive_screen.is_enable_to_tap(Locators.BTN_SEND_IN_CHAT)
        assert receive_screen.is_enable_to_tap(Locators.BTN_SHARE)
        assert receive_screen.is_enable_to_tap(Locators.BTN_SETTINGS_RECEIVE)
        assert memo_new == receive_screen.get_text2(Locators.REVEIVE_MEMO2)

    '''Изменить аккаунт из раздела'''
    def test_change_account_history(self):
        receive_screen = ReceiveScreen(self.driver)
        receive_screen.login_without_onboard()
        receive_screen.tap(Locators.BTN_TOKEN_RUBCASH)
        receive_screen.tap(Locators.DETAIL_TOKEN_RECEIVE)
        receive_screen.tap(Locators.TEXT_AKK_NAME)
        receive_screen.tap(Locators.BTN_ADD_MORE_ACC)
        receive_screen.tap(Locators.BTN_ENTER_PK_POPUP)
        receive_screen.send_keys(Locators.FIELD_PRIVAT_KEY, TestData.PRIVAT_KEY)
        receive_screen.tap(Locators.TEXT_WARNING)
        receive_screen.tap(Locators.BTN_ADD_ACC)

        assert receive_screen.get_text2(Locators.TEXT_AKK_NAME) ==receive_screen.get_text2(Locators.RECIPIENT_NAME)
        assert receive_screen.is_visible(Locators.TEXT_SCAN_QR)
        assert receive_screen.is_visible(Locators.QR_IMAGE)
        assert receive_screen.is_visible(Locators.RECIPIENT_NAME)
        assert receive_screen.is_enable_to_tap(Locators.BTN_SEND_IN_CHAT)
        assert receive_screen.is_enable_to_tap(Locators.BTN_SHARE)
        assert receive_screen.is_enable_to_tap(Locators.BTN_SETTINGS_RECEIVE)

    '''Изменить аккаунт из настроек раздела'''
    def test_change_account_settings_history(self):
        receive_screen = ReceiveScreen(self.driver)
        receive_screen.login_without_onboard()
        receive_screen.tap(Locators.BTN_TOKEN_RUBCASH)
        receive_screen.tap(Locators.DETAIL_TOKEN_RECEIVE)
        receive_screen.tap(Locators.BTN_SETTINGS_RECEIVE)
        receive_screen.tap(Locators.TEXT_AKK_NAME)
        receive_screen.tap(Locators.BTN_ADD_MORE_ACC)
        receive_screen.tap(Locators.BTN_ENTER_PK_POPUP)
        receive_screen.send_keys(Locators.FIELD_PRIVAT_KEY, TestData.PRIVAT_KEY)
        receive_screen.tap(Locators.TEXT_WARNING)
        receive_screen.tap(Locators.BTN_ADD_ACC)

        assert receive_screen.get_text2(Locators.TEXT_AKK_NAME) == 'loveisinair1'
        assert receive_screen.is_visible(Locators.TEXT_DEPOSIT_TOKEN)
        assert receive_screen.is_visible(Locators.RECEIVE_TOKEN)
        assert receive_screen.is_visible(Locators.FIELD_AMOUNT_RECEIVE)
        assert receive_screen.is_visible(Locators.FIELD_MEMO_RECEIVE)
        assert receive_screen.is_visible(Locators.BTN_SAVE_RECEIVE)
        assert receive_screen.is_disable_to_tap(Locators.BTN_SAVE_RECEIVE)

    '''Отправить в чат заполненный код'''
    def test_receive_settings_chat_history(self):
        receive_screen = ReceiveScreen(self.driver)
        receive_screen.login_without_onboard()
        receive_screen.tap(Locators.BTN_TOKEN_RUBCASH)
        receive_screen.tap(Locators.DETAIL_TOKEN_RECEIVE)
        receive_screen.tap(Locators.BTN_SETTINGS_RECEIVE)
        receive_screen.tap(Locators.RECEIVE_TOKEN)
        receive_screen.tap(Locators.BTN_TOKEN_RUBCASH)
        receive_screen.tap(Locators.FIELD_AMOUNT_RECEIVE)
        receive_screen.send_keys(Locators.FIELD_AMOUNT_RECEIVE, TestData.SUM_RECEIVE)
        receive_screen.tap(Locators.FIELD_MEMO_RECEIVE)
        receive_screen.send_keys(Locators.FIELD_MEMO_RECEIVE, TestData.MEMO)
        receive_screen.tap(Locators.TEXT_DEPOSIT_TOKEN)
        receive_screen.tap(Locators.BTN_SAVE_RECEIVE)
        receive_screen.tap(Locators.BTN_SEND_IN_CHAT)
        receive_screen.tap(Locators.RECIPIENT_NAME_FLETCERCAT1)
        receive_screen.tap(Locators.BTN_SEND)

        assert receive_screen.is_enable_to_tap(Locators.BTN_QR_CHAT)
        assert receive_screen.is_enable_to_tap(Locators.BTN_TRANSFER_CHAT)
        assert receive_screen.is_visible(Locators.BTN_QR_IMAGE)
        assert receive_screen.is_visible(Locators.FIELD_MESSAGE)
        assert receive_screen.is_enable_to_tap(Locators.BTN_MESSAGE_SEND)
        assert receive_screen.is_enable_to_tap(Locators.BTN_QR_IMAGE_SAVE)
        assert receive_screen.is_visible(Locators.RECIPIENT_NAME_FLETCERCAT1)
        assert receive_screen.is_visible(Locators.BTN_RES_AND_TRANS)

    '''отправить в чат пустой код'''
    def test_receive_chat_history(self):
        receive_screen = ReceiveScreen(self.driver)
        receive_screen.login_without_onboard()
        receive_screen.tap(Locators.BTN_TOKEN_RUBCASH)
        receive_screen.tap(Locators.DETAIL_TOKEN_RECEIVE)
        receive_screen.tap(Locators.BTN_SEND_IN_CHAT)
        receive_screen.tap(Locators.RECIPIENT_NAME_FLETCERCAT1)
        receive_screen.tap(Locators.BTN_SEND)

        assert receive_screen.is_enable_to_tap(Locators.BTN_QR_CHAT)
        assert receive_screen.is_enable_to_tap(Locators.BTN_TRANSFER_CHAT)
        assert receive_screen.is_visible(Locators.BTN_QR_IMAGE)
        assert receive_screen.is_visible(Locators.FIELD_MESSAGE)
        assert receive_screen.is_enable_to_tap(Locators.BTN_MESSAGE_SEND)
        assert receive_screen.is_enable_to_tap(Locators.BTN_QR_IMAGE_SAVE)
        assert receive_screen.is_visible(Locators.RECIPIENT_NAME_FLETCERCAT1)
        assert receive_screen.is_visible(Locators.BTN_RES_AND_TRANS)

    '''отправить в чат заполненный код и сохранить его'''
    def test_receive_settings_chat_save_qr_history(self):
        receive_screen = ReceiveScreen(self.driver)
        receive_screen.login_without_onboard()
        receive_screen.tap(Locators.BTN_TOKEN_RUBCASH)
        receive_screen.tap(Locators.DETAIL_TOKEN_RECEIVE)
        receive_screen.tap(Locators.BTN_SETTINGS_RECEIVE)
        receive_screen.tap(Locators.RECEIVE_TOKEN)
        receive_screen.tap(Locators.BTN_TOKEN_RUBCASH)
        receive_screen.tap(Locators.FIELD_AMOUNT_RECEIVE)
        receive_screen.send_keys(Locators.FIELD_AMOUNT_RECEIVE, TestData.SUM_RECEIVE)
        receive_screen.tap(Locators.FIELD_MEMO_RECEIVE)
        receive_screen.send_keys(Locators.FIELD_MEMO_RECEIVE, TestData.MEMO)
        receive_screen.tap(Locators.TEXT_DEPOSIT_TOKEN)
        receive_screen.tap(Locators.BTN_SAVE_RECEIVE)
        receive_screen.tap(Locators.BTN_SEND_IN_CHAT)
        receive_screen.tap(Locators.RECIPIENT_NAME_FLETCERCAT1)
        receive_screen.tap(Locators.BTN_SEND)
        receive_screen.tap(Locators.BTN_QR_IMAGE_SAVE)